let questions = [
    {
      numb: 1,
      question: "Какие основные возможности предоставляет CSS?",
      answer: "Определение цвета текста и фона, выбор шрифтов и их размеров, создание анимаций и эффектов перехода",
      options: [
        "Определение цвета текста и фона, выбор шрифтов и их размеров, создание анимаций и эффектов перехода",
        "Только определение цвета фона и выбор шрифтов.",
        "Создание интерактивных элементов на веб-странице.",
        "Управление базами данных.",
      ]
    },
    {
      numb: 2,
      question: "Что позволяет сделать каскадирование стилей в CSS?",
      answer: "Позволяет определить приоритетность применения различных стилей к элементам веб-страницы.",
      options: [
        "Изменять внешний вид веб-сайта без изменения HTML-кода.",
        "Автоматически подстраиваться под разные размеры экранов устройств.",
        "Позволяет определить приоритетность применения различных стилей к элементам веб-страницы.",
        "Создавать адаптивный дизайн.",
      ]
    },
    {
      numb: 3,
      question: "Какие селекторы можно использовать в CSS?",
      answer: "Селекторы по типу элемента, классам, идентификаторам и состояниям элементов.",
      options: [
        "Только селекторы по классу.",
        "Селекторы по типу элемента, классам, идентификаторам и состояниям элементов.",
        "Селекторы по именам пользователей.",
        "Только селекторы по типу элемента.",
      ]
    },
    {
      numb: 4,
      question: "Что позволяют делать медиа-запросы в CSS?",
      answer: "Определять различные стили в зависимости от характеристик устройства, таких как ширина экрана и ориентация.",
      options: [
        "Создавать адаптивный дизайн.",
        "Создавать анимации.",
        "Определять различные стили в зависимости от характеристик устройства, таких как ширина экрана и ориентация.",
        "Изменять базы данных.",
      ]
    },
    {
      numb: 5,
      question: "Какие преимущества предоставляет CSS в разработке веб-сайтов?",
      answer: "Использование вложенности и наследования стилей для управления стилями на веб-сайтах.",
      options: [
        "Возможность создания интерактивных элементов.",
        "Возможность автоматической адаптации под разные размеры экранов.",
        "Использование вложенности и наследования стилей для управления стилями на веб-сайтах.",
        "Определение структуры баз данных.",
      ]
    }
  ];
  
  function optionSelected(answer){
    clearInterval(counter); // остановить счетчик
    clearInterval(counterLine); // остановить счетчик линии
    let userAns = answer.textContent.trim(); // получить выбранный пользователем вариант ответа
    let correcAns = questions[que_count].answer; // получить правильный ответ из массива
    const allOptions = option_list.children.length; // получить количество всех вариантов ответа
    
    if(userAns === correcAns){ // если выбранный пользователем ответ равен правильному ответу из массива
        userScore += 1; // увеличить счет на 1
        answer.classList.add("correct"); // добавить зеленый цвет к выбранному правильному ответу
        answer.insertAdjacentHTML("beforeend", tickIconTag); // добавить значок галочки к выбранному правильному ответу
        console.log("Правильный ответ");
        console.log("Ваши правильные ответы = " + userScore);
    } else {
        answer.classList.add("incorrect"); // добавить красный цвет к выбранному неправильному ответу
        answer.insertAdjacentHTML("beforeend", crossIconTag); // добавить значок крестика к выбранному неправильному ответу
        console.log("Неправильный ответ");
  
        // Выделить правильный ответ
        for(let i = 0; i < allOptions; i++){
            if(option_list.children[i].textContent.trim() === correcAns){
                option_list.children[i].classList.add("correct");
                option_list.children[i].insertAdjacentHTML("beforeend", tickIconTag);
            }
        }
    }
    
    // Запретить выбор всех вариантов ответа после выбора пользователем одного из них
    for(let i = 0; i < allOptions; i++){
        option_list.children[i].classList.add("disabled");
    }
    
    // Показать кнопку "Далее"
    next_btn.classList.add("show");
  }
  